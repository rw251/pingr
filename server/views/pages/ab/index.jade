include ../../partials/head.jade
include ../../mixins/toolbar.jade
.container.starter-template-high(style='background:white')
  +toolbar('A/B Test List', [{btn:'btn-info',path:'/',text:'Back to PINGR'},{btn:'btn-info',path:'/outcomes',text:'View Conversion Metrics'},{btn:'btn-success',path:'/ab/new',text:'New A/B Test'}])
  if message && message.error
    .alert.alert-danger.alert-dismissible.fade-in(role="alert")
      button.close(type="button" data-dismiss="alert" aria-label="Close")
        span(aria-hidden="true") ×
      p= message.error
  if message && message.success
    .alert.alert-success.alert-dismissible.fade-in(role="alert")
      button.close(type="button" data-dismiss="alert" aria-label="Close")
        span(aria-hidden="true") ×
      p= message.success
  if(showArchived)
    a.btn.btn-warning(href='/ab') Hide archived tests
  else
    a.btn.btn-warning(href='/ab?showArchived=true') Show archived tests
  table.table
    thead
      tr
        th Research question
        th Start date
        th Test details
        th Status
        th(style='width:280px') Actions
    tbody
      each test in tests
        tr
          td= test.researchQuestion
          td= test.startDate ? test.startDate.toISOString().substr(0,10) : ''
          td(title='Randomisation: ' + test.randomisationType.description + '\nTrial: ' + test.trial.description + '\nOutcome: ' + test.outcome.description)
            .item= 'Randomisation: ' + test.randomisationType.name
            .item= 'Trial: ' + test.trial.name
            .item= 'Outcome: ' + test.outcome.name
          td(id=test._id,title=test.status.description)= test.status.name
          td
            .btn-toolbar
              if(!test.statusId || test.statusId === 'new')
                a.btn.btn-warning(href='/ab/config/'+test._id) Edit
                a.btn.btn-danger(href='/ab/remove/'+test._id) Delete
              if(test.statusId === 'configured')
                a.btn.btn-warning(href='/ab/config/'+test._id) Edit
                a.btn.btn-danger(href='/ab/remove/'+test._id) Delete
                if(test.readyToDeploy)
                  a.btn.btn-success(href='/ab/start/'+test._id) Start!
                else
                  label(title='Test is not configured on the back end yet. Give Richard a kick.') Start?
              if(test.statusId === 'running')
                a.btn.btn-primary(href='/ab/progress/'+test._id) View Progress
                a.btn.btn-warning(href='/ab/pause/'+test._id) Pause
                a.btn.btn-danger(href='/ab/stop/'+test._id) End test
              if(test.statusId === 'paused')
                a.btn.btn-primary(href='/ab/progress/'+test._id) View Progress
                a.btn.btn-success(href='/ab/start/'+test._id) Resume
                a.btn.btn-danger(href='/ab/stop/'+test._id) End test
              if(test.statusId === 'completed')
                a.btn.btn-primary(href='/ab/results/'+test._id) View Results
                a.btn.btn-warning(href='/ab/archive/'+test._id) Archive
              if(test.statusId === 'archived')
                a.btn.btn-primary(href='/ab/results/'+test._id) View Results
script(src='https://code.jquery.com/jquery-1.12.4.min.js', integrity='sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=', crossorigin='anonymous')
script.
  window.jQuery || document.write('<script src="/js/jquery/jquery-1.12.4.min.js"><\/script>')
script
  | var testIds = ['
  = tests.filter(function(v){ return v.statusId==='running';}).map(function(v){ return v._id;}).join("','")
  | '];
script.
  testIds.forEach(function(testId) {
    if(!testId) return;
    $
      .getJSON('/ab/raw/progress/' + testId)
      .done(function(data){
        $('#' + testId).html('Running:<br> baseline: ' + data.baseline.total + '/' + data.needed+ '<br> feature: ' + data.feature.total + '/' + data.needed)
      });
  });  